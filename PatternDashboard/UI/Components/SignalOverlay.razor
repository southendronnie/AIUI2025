@inject HttpClient Http

<h4>Signal Diagnostics Overlay</h4>

@if (signals == null)
{
    <p>Loading signalsâ€¦</p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Time</th>
                <th>Instrument</th>
                <th>Pattern</th>
                <th>Confidence</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var s in signals.OrderByDescending(s => s.Time))
            {
                <tr>
                    <td>@s.Time.ToString("u")</td>
                    <td>@s.Instrument</td>
                    <td>@s.Type</td>
                    <td>@s.Confidence.ToString("F2")</td>
                </tr>
            }
        </tbody>
    </table>

    <h5>Signal Frequency</h5>
    <ul>
        @foreach (var group in signals.GroupBy(s => s.Type))
        {
            <li>@group.Key: @group.Count()</li>
        }
    </ul>
}

@code {
    private List<SignalEntry> signals;

    protected override async Task OnInitializedAsync()
    {
        signals = await Http.GetFromJsonAsync<List<SignalEntry>>($"{Stat.Url}/signals/logs");
    }

    public class SignalEntry
    {
        public DateTime Time { get; set; }
        public string Instrument { get; set; }
        public string Type { get; set; }
        public double Confidence { get; set; }
    }
}
