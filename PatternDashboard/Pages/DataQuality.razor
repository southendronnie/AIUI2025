@page "/data-quality"
@using FXAI.Models
@inject HttpClient Http

<h3>📊 Data Quality Diagnostics</h3>

@if (stats != null)
{
    <div class="summary-cards">
        <p><strong>Total Candles:</strong> @stats.TotalCandles</p>
        <p><strong>Expected Candles:</strong> @stats.ExpectedCandles</p>
        <p><strong>Gap Count:</strong> @stats.GapCount</p>
        <p><strong>Coverage:</strong> @stats.CoveragePercent.ToString("F2")%</p>
    </div>
}

@if (gaps?.Count > 0)
{
    <h4>Detected Gaps</h4>
    <table class="table">
        <thead>
            <tr><th>Start</th><th>End</th><th>Duration</th></tr>
        </thead>
        <tbody>
            @foreach (var gap in gaps)
            {
                <tr>
                    <td>@gap.Start.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@gap.End.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@gap.Duration.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
    <p><strong>Start Time:</strong> @stats.StartTime.ToString("yyyy-MM-dd HH:mm")</p>
    <p><strong>End Time:</strong> @stats.EndTime.ToString("yyyy-MM-dd HH:mm")</p>
}
else
{
    <p>No gaps detected 🎉</p>
}

@code {
    private DataStats? stats;
    private List<DataGap>? gaps;

    protected override async Task OnInitializedAsync()
    {
        stats = await Http.GetFromJsonAsync<DataStats>($"{Stat.Url}/data/stats");
        gaps = await Http.GetFromJsonAsync<List<DataGap>>($"{Stat.Url}/data/gaps");
    }

    public class DataStats
    {
        public int TotalCandles { get; set; }
        public int ExpectedCandles { get; set; }
        public int GapCount { get; set; }
        public double CoveragePercent { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
    }

    public class DataGap
    {
        public DateTime Start { get; set; }
        public DateTime End { get; set; }
        public TimeSpan Duration => End - Start;
    }
}